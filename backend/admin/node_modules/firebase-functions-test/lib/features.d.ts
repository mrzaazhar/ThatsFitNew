import { makeChange, wrap, mockConfig } from 'firebase-functions-test/lib/main';
import * as analytics from 'firebase-functions-test/lib/providers/analytics';
import * as auth from 'firebase-functions-test/lib/providers/auth';
import * as database from 'firebase-functions-test/lib/providers/database';
import * as firestore from 'firebase-functions-test/lib/providers/firestore';
import * as pubsub from 'firebase-functions-test/lib/providers/pubsub';
import * as storage from 'firebase-functions-test/lib/providers/storage';
import { FirebaseFunctionsTest } from 'firebase-functions-test/lib/lifecycle';
export interface LazyFeatures {
    mockConfig: typeof mockConfig;
    wrap: typeof wrap;
    makeChange: typeof makeChange;
    analytics: typeof analytics;
    auth: typeof auth;
    database: typeof database;
    firestore: typeof firestore;
    pubsub: typeof pubsub;
    storage: typeof storage;
}
export declare const features: LazyFeatures;
export interface FeaturesList extends LazyFeatures {
    cleanup: InstanceType<typeof FirebaseFunctionsTest>['cleanup'];
}
